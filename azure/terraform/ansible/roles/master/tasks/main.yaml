---
# this role contains tasks for master nodes

- name: Copy Kubernets config files
  copy: src={{ item.src }} dest={{ item.dest }}
  with_items:
  - { src: '../configs/kubeadm-init.yaml', dest: '/etc/kubernetes/' }
  - { src: './azure-cloud.conf', dest: '/etc/kubernetes/' }
  # - { src: './calico.yaml', dest: '/etc/kubernetes/' }
  become: true

- name: Check if kubeadm cluster was already created
  stat:
    path: /etc/kubernetes/controller-manager.conf
  register: k8s_cluster
  become: true

- name: Get kubeadm version
  shell: |
    kubeadm version -oshort
  register: kubeadm_version

- name: Print kubeadm version
  debug:
    var: kubeadm_version

- name: Set control plane node name in kubeadm-init.yaml
  shell: |
    sed -i "s/kubernetesVersion\:.*$/kubernetesVersion\: {{ kubeadm_version.stdout_lines[0] }}/1" /etc/kubernetes/kubeadm-init.yaml
  become: true

- name: Execute Kubeadm Init Command
  command: kubeadm init --config /etc/kubernetes/kubeadm-init.yaml
  when: k8s_cluster.stat.exists == false
  become: true

- name: Print the value of group variable leader_private_ip
  debug: 
    msg: "{{ leader_private_ip }} "
  become: true

- name: Wait for control plane to start.
  wait_for:
    # host: "{{ leader_private_ip }}"
    host: "{{ groups['masters_pvt_ip'][0] }}"
    port: "6443"
    # delay: 5
    # timeout: 240
    state: started
  become: true

- name: Create kubeconfig and set permission
  shell: |
    mkdir -p $HOME/.kube
    sudo cp -i /etc/kubernetes/admin.conf $HOME/.kube/config
    sudo chown $(id -u):$(id -g) $HOME/.kube/config
  become: false

- name: Making sure that the kubeconfig file is present before continuing
  tags: filepresensevalidation
  register: filepresensevalidation
  wait_for:
    path:  "$HOME/.kube/config"
    # delay: 5
    # timeout: 5
    state: present
    msg: "Specified .kube/config is not present"
  # when: ansible_hostname == "{{groups['app'][0]}}" and adminlogfile is defined
  # ignore_errors: true
  become: false

- name: Untaint control plane hosts
  shell: |
    kubectl taint nodes --all node-role.kubernetes.io/control-plane-
    # kubectl taint nodes --all node-role.kubernetes.io/master-
  become: false

# Generate kube join command for joining the node to the Kubernetes cluster and store the command in the file named join-command.
- name: Generate join command
  command: kubeadm token create --print-join-command
  register: join_command
  become: true

- debug:
    msg: "{{ join_command }}"
  become: true

- name: Copy join command to local file
  #changedthis
  become: false
  local_action: copy content="{{ join_command.stdout_lines[0] }}" dest="./join-command"
