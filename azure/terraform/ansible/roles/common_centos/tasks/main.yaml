---
# this role contains tasks for all nodes

# set SELinux in permissive mode (effectively disabling it)
- name: generate containerd config file
  become: true
  shell: |
    setenforce 0
    sed -i 's/^SELINUX=enforcing$/SELINUX=permissive/' /etc/selinux/config

- name: Install required system packages
  ansible.builtin.yum:
    name: "{{ packages }}"
    state: present
    # state: latest
  vars:
    packages:
    - yum-utils
    - device-mapper-persistent-data
    - lvm2
    - curl
    - net-tools
    - ipset
  become: true

# this is only necessary when using docker CRI
- name: configure Docker yum repo
  ansible.builtin.yum_repository:
    name: "docker-ce-stable"
    description: Docker CE Stable - $basearch
    baseurl: "https://download.docker.com/linux/centos/$releasever/$basearch/stable"
    enabled: true
    gpgcheck: true
    gpgkey:
    - https://download.docker.com/linux/centos/gpg
    state: present
  become: true

- name: Install containerd package
  ansible.builtin.yum:
    name:
    - containerd.io
    state: latest
    update_cache: true
  become: true

- name: configure Kubernetes repo
  become: true
  shell: |
    cat <<EOF | sudo tee /etc/yum.repos.d/kubernetes.repo
    [kubernetes]
    name=Kubernetes
    baseurl=https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo }}/rpm/
    enabled=1
    gpgcheck=1
    gpgkey=https://pkgs.k8s.io/core:/stable:/v{{ k8s_repo }}/rpm/repodata/repomd.xml.key
    exclude=kubelet kubeadm kubectl cri-tools kubernetes-cni
    EOF

- name: install Kubernetes components
  yum:
    name:
      - kubeadm
      - kubelet
      - kubectl
    disable_excludes: kubernetes
    state: present
    update_cache: true
  become: true

- name: configure VM system settings for Kubernetes
  copy:
    dest: /etc/sysctl.d/k8s.conf
    content: |
      vm.swappiness=0
      vm.overcommit_memory=1
      net.bridge.bridge-nf-call-ip6tables=1
      net.bridge.bridge-nf-call-iptables=1
      net.ipv4.ip_forward=1
      net.ipv4.tcp_keepalive_time=600
  become: true

- name: configure netfilter
  copy:
    dest: /etc/modules-load.d/netfilter.conf
    content: |
      br_netfilter
  become: true

- name: generate containerd config file
  become: true
  shell: |
    if [ -f '/etc/containerd/config.toml' ]; then
      rm /etc/containerd/config.toml
    fi
    containerd config default | sudo tee /etc/containerd/config.toml
    # enable systemd cgroup v2
    sed -i 's/SystemdCgroup = false/SystemdCgroup = true/1' /etc/containerd/config.toml

- name: Enable containerd.service
  systemd:
    name: containerd.service
    daemon_reload: true
    enabled: true
  become: true

- name: Ensure containerd.service is restarted
  service:
    name: containerd
    state: restarted
    # sleep: 2
  become: true

- name: restart sysctl, ensure br_netfilter module, disable swap, disable SELinux
  become: true
  shell: |
    modprobe br_netfilter
    sysctl --system
    lsmod | grep br_netfilter
    swapoff -a
    sed -i '/ swap / s/^\(.*\)$/#\1/g' /etc/fstab
